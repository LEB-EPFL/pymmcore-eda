[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pymmcore-eda"
description = "Smart microscopy library based on pymmcore-plus"
keywords = ["microscope", "micro-manager", "smart-microscopy"]
readme = "README.md"
requires-python = ">=3.9"
license = { text = "BSD 3-Clause License" }
authors = [
    { name = "Willi Stepp", email = "willi@stepp.one" },
    { name = "Kasia Glinka"},
    { name = "Giorgio Tortarolo"}
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: System :: Hardware",
    "Topic :: Utilities",
]
dynamic = ["version"]
dependencies = [
    "pymmcore-plus<0.13.6",
    "sortedcontainers>=2.4.0",
]

[project.optional-dependencies]
dev = [
    "ipython",
    "mypy",
    "pdbpp; sys_platform != 'win32'",
    "pre-commit",
    "ruff",
    "tensorstore-stubs",
]

[project.urls]
Source = "https://github.com/LEB-EPFL/pymmcore-eda"
Tracker = "https://github.com/LEB-EPFL/pymmcore-eda/issues"
Documentation = "https://LEB-EPFL.github.io/pymmcore-eda"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"

# https://beta.ruff.rs/docs/rules/
[tool.ruff]
line-length = 88
target-version = "py311"
exclude = ["smart_scan"]

[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "F",    # flakes
    "W",    # warnings
    "D",    # pydocstyle
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TID",  # tidy
    "TCH",  # typecheck
    "SLF",  # private-access
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "SLF"]
"examples/*.py" = ["D"]
"_cli.py" = ["B008"]
"docs/*.py" = ["A", "D"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = ["src/**", "smart_scan"]
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
explicit_package_bases = true
plugins = "pydantic.mypy"
# see https://github.com/python/mypy/issues/5374 and related discussions
# it causes more pain than it solves
disable_error_code = ["type-abstract"]
python_version = "3.11"

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "raise AssertionError",
    "\\.\\.\\.",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
]
show_missing = true

[tool.coverage.run]
source = ['pymmcore_plus']
omit = ["src/pymmcore_plus/_build.py"]

[tool.typos.files]
extend-exclude = ["smart_scan"] 

[tool.typos.default]
extend-ignore-identifiers-re = ["(?i)nd2?.*", "(?i)ome", "anager", "ba"]
